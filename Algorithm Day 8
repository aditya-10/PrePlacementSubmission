Merge Two Binary Trees

class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if ( t1 && t2 ) {
            TreeNode * root = new TreeNode(t1->val + t2->val);
            root->left = mergeTrees(t1->left, t2->left);
            root->right = mergeTrees(t1->right, t2->right);
            return root;
        } else {
            return t1 ? t1 : t2;
        }
    }
};

Populating Next Right Pointers in Each Node

class Solution {
public:
    Node* connect(Node* root) {
        if(!root) return nullptr;
        queue<Node*> q;
        q.push(root);        
        while(size(q)) {
            Node* rightNode = nullptr;                    
            for(int i = size(q); i; i--) {                
                auto cur = q.front(); q.pop();            
                cur -> next = rightNode;                  
                rightNode = cur;                          
                if(cur -> right)                          
                    q.push(cur -> right),                 
                    q.push(cur -> left);                  
            }
        }
        return root;
    }
};
